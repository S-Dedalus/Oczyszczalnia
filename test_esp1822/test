
#include <SoftwareSerial.h>

SoftwareSerial mySerial(4, 5); // RX, TX = D2, D1

int pomiary[10];


uint16_t pomiar() {
  uint16_t distance = 0;

  mySerial.write(0x55);
  if (mySerial.available()) {

    byte recived[4];
    for (int i = 0; i < 4; i++) {
      int a = mySerial.read();
      recived[i] = a;
    }
    Serial.println("odebrano dane z czytnika");
    if (recived[0] = 0xFF) {
      Serial.println("pierwszy bajt z czytnika poprawny");
      uint32_t crc = 0xFF + recived[1] + recived[2];
      if (recived[3] = crc) {
        Serial.println("poprawna suma kontrolna");
        uint16_t hBit = recived[1];
        uint8_t lBit = recived[2];
        hBit <<= 8;
        distance = hBit | lBit;
        Serial.print("Zmierzona odleglosc = ");
        Serial.print(distance);
        Serial.println(" mm");
      }
      else {
        Serial.println("blad sumy kontrolnej");
      }
    }
    else {
      Serial.println("błąd pierwszego bajta");
    }
  }
  return distance;
}

void sort(int a[], int size) {
  for (int i = 0; i < (size - 1); i++) {
    for (int o = 0; o < (size - (i + 1)); o++) {
      if (a[o] > a[o + 1]) {
        int t = a[o];
        a[o] = a[o + 1];
        a[o + 1] = t;
      }
    }
  }
}



void setup() {
  Serial.begin(115200);
  mySerial.begin(9600);
  Serial.println(" ");
  Serial.println(" ");
  Serial.println(" ");
  Serial.println("Zainicjowano Serial");
}


void loop() {
  unsigned long t = 5000;
  static unsigned long _ETimer;
  if ( millis() - _ETimer >= (t)) {
    _ETimer += (t);

    static unsigned int i;
    pomiary[i] = pomiar();

    i++;
    if (i >= 10) {
      sort(pomiary, 10);
      for (int b = 0; b < 10; b++) {
        Serial.println(pomiary[b]);
      }
      int avgPomiary = (pomiary[3] + pomiary[4] + pomiary[5] + pomiary[6]);
      avgPomiary = avgPomiary / 4;
      Serial.print("Ostateczny usredniony wynik pomiarow: ");
      Serial.println(avgPomiary);
      i=0;
    }
  }
}
